// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RB.TBC.FinalProject.Domain.Data;

#nullable disable

namespace RB.TBC.FinalProject.Domain.Migrations
{
    [DbContext(typeof(TbcDbContext))]
    [Migration("20240722170740_Migratedf")]
    partial class Migratedf
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("RB.TBC.FinalProject.Domain.Entitites.Book", b =>
                {
                    b.Property<string>("BookId")
                        .HasColumnType("TEXT");

                    b.Property<string>("authors")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("imageLink")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("RB.TBC.FinalProject.Domain.Entitites.Favorite", b =>
                {
                    b.Property<string>("FavoriteId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BookId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FavoriteId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("RB.TBC.FinalProject.Domain.Entitites.Feadback", b =>
                {
                    b.Property<string>("FeadbackId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FeadBack")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("User_Feadback");

                    b.Property<DateTime>("FeadbackDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("Name_Of_User");

                    b.Property<int>("RatingGivedByUser")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Rating_By_User");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Feadback_Status");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("FeadbackId");

                    b.HasIndex("UserId");

                    b.ToTable("Feadbacks");
                });

            modelBuilder.Entity("RB.TBC.FinalProject.Domain.Entitites.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("BirthDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RB.TBC.FinalProject.Domain.Entitites.Favorite", b =>
                {
                    b.HasOne("RB.TBC.FinalProject.Domain.Entitites.Book", "Book")
                        .WithMany("FavoriteByUser")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RB.TBC.FinalProject.Domain.Entitites.User", "User")
                        .WithMany("FavoriteBooks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RB.TBC.FinalProject.Domain.Entitites.Feadback", b =>
                {
                    b.HasOne("RB.TBC.FinalProject.Domain.Entitites.User", "User")
                        .WithMany("Feadbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RB.TBC.FinalProject.Domain.Entitites.Book", b =>
                {
                    b.Navigation("FavoriteByUser");
                });

            modelBuilder.Entity("RB.TBC.FinalProject.Domain.Entitites.User", b =>
                {
                    b.Navigation("FavoriteBooks");

                    b.Navigation("Feadbacks");
                });
#pragma warning restore 612, 618
        }
    }
}
